#!/bin/bash
#set -e  # –ü—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ó–∞–≤–µ—Ä—à–∞—Ç—å –≤—Å–µ background-–ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
#trap 'echo "üßπ –ó–∞–≤–µ—Ä—à–∞–µ–º background-–ø—Ä–æ—Ü–µ—Å—Å—ã..."; kill $(jobs -p)' EXIT

echo "========================= üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Helm —á–∞—Ä—Ç–æ–≤ ========================="

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ kube-prometheus-stack
helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
  --namespace monitoring \
  --create-namespace \
  --values Promiteus/KPS_values.yaml

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ KEDA
helm upgrade --install keda kedacore/keda \
  --namespace monitoring \
  --create-namespace

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ingress-nginx
helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
  --namespace ingress-nginx \
  --create-namespace \
  --values NIC/NIC_values.yaml

echo "========================= üîê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Meilisearch ========================="

kubectl apply -f meilisearch/secret.yaml
helm upgrade --install meilisearch meilisearch/meilisearch \
  -n meili-system --create-namespace \
  -f meilisearch/meili_values.yaml
kubectl apply -f meilisearch/ServiceMonitor.yaml

echo "========================= üóÑÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MinIO ========================="

kubectl apply -f MiniO/minio_conf.yaml

echo "========================= üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Loki ========================="

helm upgrade --install loki grafana/loki-stack \
  --namespace loki \
  --values loki/loki-values.yaml \
  --create-namespace

echo "========================= üß† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis ========================="

helm upgrade --install my-redis oci://registry-1.docker.io/bitnamicharts/redis \
  -f my_redis/redis-values.yaml \
  --namespace redis \
  --create-namespace

# HPA –¥–ª—è Redis (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
# kubectl apply -f my_redis/KEDA_HPA.yaml

echo "========================= üêò –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL-–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ========================="

helm upgrade --install postgres-operator postgres-operator-charts/postgres-operator \
  --namespace postgres-operator \
  --create-namespace

kubectl apply -f postgreSQL/cluster-conf.yaml
kubectl apply -f postgreSQL/HPA.yaml

echo "========================= üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Ingress –∏ KEDA ========================="

kubectl apply -f NIC/ingress_drf.yaml
kubectl apply -f Promiteus/KEDA_HPA.yaml

echo "========================= –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ ========================="

docker build -f centralized_id_generator/storage/.dockerfile -t redis-cleaner:latest centralized_id_generator/storage
kubectl apply -f centralized_id_generator/storage/cleanup-cronjob.yaml

docker build -f centralized_id_generator/generator/.dockerfile -t key-generator:latest centralized_id_generator/generator
kubectl apply -f centralized_id_generator/generator/key_generator_cronjob.yaml

echo "========================= üöÄ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ========================="

docker build -f app/sidecar/.dockerfile -t flask-l2-cache:latest app/sidecar
docker build -f app/web.dockerfile -t drf-app:latest app/

kubectl apply -f app/secret.yaml
kubectl apply -f app/app.yaml
kubectl apply -f app/ServiceMonitor.yaml
kubectl apply -f celery/celery-worker-deployment.yaml

echo "========================= üö™ Port-forwarding —Å–µ—Ä–≤–∏—Å–æ–≤ ========================="

kubectl port-forward -n ingress-nginx svc/ingress-nginx-controller 5000:80 & \
kubectl port-forward svc/kube-prometheus-stack-grafana -n monitoring 3000:80 & \
kubectl port-forward svc/kube-prometheus-stack-prometheus -n monitoring 9090:9090 & \
kubectl port-forward -n meili-system svc/meilisearch 7700:7700 & \
kubectl port-forward -n minio svc/minio 9001:9001 &

echo "‚è≥ –ü–æ–¥–æ–∂–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ä—Ç–æ–≤..."
sleep 5

echo "========================= ‚öôÔ∏è –ê–∫—Ç–∏–≤–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∏—á Meilisearch ========================="

curl -s \
  -X PATCH 'http://localhost:7700/experimental-features/' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "metrics": true
  }'

echo "‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ Meilisearch –≤–∫–ª—é—á–µ–Ω—ã"
echo "üéâ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"